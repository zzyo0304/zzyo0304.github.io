<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python 笔记</title>
      <link href="/2023/05/27/python/"/>
      <url>/2023/05/27/python/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>python 是一种弱类型语言，变量可以不声明直接使用，变量的类型由其值决定，为其赋值后会自动创建</p><h3 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h3><p> 变量名可以是单字母，也可以是字母加下划线加数字的组合，但数字不能在变量名的首位<br> 变量名可以是中文<br> 区分大小写<br> 不可使用系统关键字</p><h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><p> 变量可以多个同时赋值即，变量可以同时定义多个，格式如下:<br> 变量1，变量2，变量… ,变量n&#x3D;值1，值2，值…，值n<br> 例如 name，age &#x3D;张三，18<br>  变量的值也可同时修改多个，如：<br>  x,y&#x3D;1,3<br>  x,y&#x3D;y,x 输出两个变量结果为，x&#x3D;3，y&#x3D;1<br>  对于赋值运算，会先计算赋值运算符右边表达式的值，后在把计算结果给赋值左边的变量</p><h3 id="变量的类型"><a href="#变量的类型" class="headerlink" title="变量的类型"></a>变量的类型</h3><p> python常用的变量类型有7种，<br> 1.Number(数字型)<br> 2.String（字符串）<br> 3.List （列表）<br> 4.Tuple（元组）<br> 5.Set （集合）<br> 6.Dictionary（字典）<br> 7.Boolean （布尔）</p><h4 id="1-Number（数字型"><a href="#1-Number（数字型" class="headerlink" title="1.Number（数字型)"></a>1.Number（数字型)</h4><p> 分为int（整形），flat（浮点型），complex（复数类型）<br> 1.整形：包括正整形，负整形，0，不可带小数点，无大小限制<br> 可以用不同进制表示，加0o为8进制，加0x为16进制，不加为10进制<br> 2.浮点型：带小数点的数字型，可用于表示实数，可用科学计数法表示<br> 查看浮点型的取值范围</p><pre><code> import sys # 导入sys.float_info #查看当前环境中浮点型的取值范围和精度</code></pre><p> 3.复数: 复数有实部和虚部组组成，每一部分都是一个浮点数，书写方法如下<br> a+bj或a+bJ<br> 生成复数时，也可以用complex函数，语法格式如下：</p><pre><code>complex([real[,imag]])</code></pre><p> 其中real 为实部值，imag为虚部值，返回值为real+imag* 1j</p><h4 id="2-String（字符串）"><a href="#2-String（字符串）" class="headerlink" title="2.String（字符串）"></a>2.String（字符串）</h4><p> python 中只有报错字符串的string 类型，没有单独保存单个字符的数据类型<br> python 中可以写在一对单引号中，也可以写在一对双引号或者三引号中<br> 对于不包含任何字符的字符串成为空字符串<br> 字符串可以使用int函数或float函数将只包含数字值的字符串转为数字型，这两种函数不可以计算表达式<br> 字符串常用转义字符<br> \ 在一行末尾时表示续行符 \表示反斜杠符号<br> &#39; 单引号   &quot; 双引号  \n换行符  \r回车  \t 制表符<br> python 字符串截取</p><pre><code> strname[index] #单个字符截取 #strname 表示字符串名字，index 表示索引值。 strname[start : end : step] #多个字符截取 strname：要截取的字符串；start：表示要截取的第一个字符所在的索引（截取时包含该字符）。如果不指定，默认为 0，也就是从字符串的开头截取；end：表示要截取的最后一个字符所在的索引（截取时不包含该字符）。如果不指定，默认为字符串的长度；step：指的是从 start 索引处的字符开始，每 step 个距离获取一个字符，直至 end 索引出的字符。step 默认值为 1，当省略该值时，最后一个冒号也可以省略。</code></pre><h4 id="3-List-（列表）"><a href="#3-List-（列表）" class="headerlink" title="3.List （列表）"></a>3.List （列表）</h4><p> 列表是python 中非常重要的类型   </p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/27/hello-world/"/>
      <url>/2023/05/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>More info: <a href="https://chatgpt.zzyo.top/">Generating</a></p><p>sk-KBSS5v5删除S53qjIsmEXxqU删除T3BlbkFJLDupUqSMQ9qgK删除cA2SHbN</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
